{"version":3,"file":"static/js/404.b9472185.chunk.js","mappings":"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","sources":["pages/Home/Components/StatsSection/statsAnimations.js","pages/Home/Components/StatsSection/StatsSection.jsx"],"sourcesContent":["import gsap from \"gsap\";\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\n\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\nexport const setupIndustryRotation = (\r\n  industries,\r\n  setIsAnimating,\r\n  setCurrentIndustryIndex\r\n) => {\r\n  const interval = setInterval(() => {\r\n    setIsAnimating(true);\r\n    setTimeout(() => {\r\n      setCurrentIndustryIndex(\r\n        (prevIndex) => (prevIndex + 1) % industries.length\r\n      );\r\n      setIsAnimating(false);\r\n    }, 300);\r\n  }, 1000);\r\n\r\n  return interval;\r\n};\r\n\r\nexport const setupDesktopAnimations = (refs) => {\r\n  const { headerRef, itemsRef, buttonRef } = refs;\r\n\r\n  ScrollTrigger.getAll().forEach((trigger) => trigger.kill());\r\n\r\n  gsap.fromTo(\r\n    headerRef.current,\r\n    { y: 30, opacity: 0 },\r\n    {\r\n      y: 0,\r\n      opacity: 1,\r\n      duration: 0.4,\r\n      scrollTrigger: {\r\n        trigger: headerRef.current,\r\n        start: \"top 85%\",\r\n        toggleActions: \"play none none none\",\r\n      },\r\n    }\r\n  );\r\n\r\n  if (itemsRef.current.length > 0) {\r\n    gsap.fromTo(\r\n      itemsRef.current,\r\n      { y: 20, opacity: 0 },\r\n      {\r\n        y: 0,\r\n        opacity: 1,\r\n        stagger: 0.1,\r\n        duration: 0.3,\r\n        scrollTrigger: {\r\n          trigger: itemsRef.current[0],\r\n          start: \"top 85%\",\r\n          toggleActions: \"play none none none\",\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  gsap.fromTo(\r\n    buttonRef.current,\r\n    { y: 15, opacity: 0 },\r\n    {\r\n      y: 0,\r\n      opacity: 1,\r\n      duration: 0.3,\r\n      delay: 0.3,\r\n      scrollTrigger: {\r\n        trigger: buttonRef.current,\r\n        start: \"top 90%\",\r\n        toggleActions: \"play none none none\",\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nexport const resetMobileAnimations = (refs) => {\r\n  const { headerRef, itemsRef, buttonRef, bgElementsRef } = refs;\r\n\r\n  ScrollTrigger.getAll().forEach((trigger) => trigger.kill());\r\n\r\n  gsap.set(\r\n    [\r\n      headerRef.current,\r\n      ...itemsRef.current,\r\n      buttonRef.current,\r\n      ...bgElementsRef.current,\r\n    ].filter(Boolean),\r\n    { y: 0, opacity: 1 }\r\n  );\r\n};\r\n\r\nexport const checkMobile = (setIsMobile) => {\r\n  setIsMobile(window.innerWidth <= 768);\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './StatsSection.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '../../../../components/ui/Button/Button';\r\nimport {\r\n  setupDesktopAnimations,\r\n  resetMobileAnimations\r\n} from './statsAnimations';\r\n\r\nconst StatsSection = () => {\r\n  const industries = ['IT', 'ОБРАЗОВАТЕЛЬНОЙ', 'МЕХАНИЧЕСКОЙ', 'АВТОМОБИЛЬНОЙ', 'ЭЛЕКТРОТЕХНИЧЕСКОЙ'];\r\n  const [currentIndustryIndex, setCurrentIndustryIndex] = useState(0);\r\n  const [isAnimating, setIsAnimating] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  const sectionRef = useRef(null);\r\n  const headerRef = useRef(null);\r\n  const itemsRef = useRef([]);\r\n  const buttonRef = useRef(null);\r\n  const bgElementsRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsMobile(window.innerWidth <= 768);\r\n    };\r\n\r\n    handleResize();\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const rotateText = () => {\r\n      setIsAnimating(true);\r\n      setTimeout(() => {\r\n        setCurrentIndustryIndex(prev => (prev + 1) % industries.length);\r\n        setIsAnimating(false);\r\n      }, 300);\r\n    };\r\n\r\n    const interval = setInterval(rotateText, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [industries.length]);\r\n\r\n  useEffect(() => {\r\n    if (!sectionRef.current) return;\r\n\r\n    if (isMobile) {\r\n      resetMobileAnimations({ headerRef, itemsRef, buttonRef, bgElementsRef });\r\n    } else {\r\n      setupDesktopAnimations({ headerRef, itemsRef, buttonRef });\r\n    }\r\n  }, [isMobile]);\r\n\r\n  return (\r\n    <section className=\"stats-section\" ref={sectionRef}>\r\n\r\n      <div className=\"stats-section__header\" ref={headerRef}>\r\n        <span className=\"stats-section__subtitle\">О КОЛЛЕДЖЕ</span>\r\n        <h2 className=\"stats-section__title\">\r\n          ЛУЧШЕЕ ОТ{' '}\r\n          <span className={`stats-section__title-highlight ${isAnimating ? 'stats-section__title-highlight--fade' : ''}`}>\r\n            {industries[currentIndustryIndex]}\r\n          </span>{' '}\r\n          ИНДУСТРИИ —\r\n        </h2>\r\n        <span className=\"stats-section__title--accent\">СТУДЕНТАМ</span>\r\n      </div>\r\n\r\n      <div className=\"stats-section__grid\">\r\n        <div className=\"stats-section__item\" ref={el => itemsRef.current[1] = el}>\r\n          <div className=\"stats-section__number\">1929</div>\r\n          <div className=\"stats-section__label\">год основания</div>\r\n        </div>\r\n        <div className=\"stats-section__item\" ref={el => itemsRef.current[2] = el}>\r\n          <div className=\"stats-section__number\">15+</div>\r\n          <div className=\"stats-section__label\">партнёров</div>\r\n        </div>\r\n        <div className=\"stats-section__item\" ref={el => itemsRef.current[0] = el}>\r\n          <div className=\"stats-section__number\">1млн+</div>\r\n          <div className=\"stats-section__label\">выпускников</div>\r\n        </div>\r\n        <div className=\"stats-section__item\" ref={el => itemsRef.current[3] = el}>\r\n          <div className=\"stats-section__number\">10+</div>\r\n          <div className=\"stats-section__label\">специальностей</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"stats-section__button-container\" ref={buttonRef}>\r\n        <Link to=\"/about\" className=\"stats-section__link\">\r\n          <Button variant=\"green\" className=\"stats-section__button\">\r\n            УЗНАТЬ БОЛЬШЕ О НАС\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default StatsSection;"],"names":["gsap","registerPlugin","ScrollTrigger","StatsSection","industries","currentIndustryIndex","setCurrentIndustryIndex","useState","isAnimating","setIsAnimating","isMobile","setIsMobile","sectionRef","useRef","headerRef","itemsRef","buttonRef","bgElementsRef","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","interval","setInterval","rotateText","setTimeout","prev","length","clearInterval","current","refs","getAll","forEach","trigger","kill","set","filter","Boolean","y","opacity","resetMobileAnimations","fromTo","duration","scrollTrigger","start","toggleActions","stagger","delay","setupDesktopAnimations","_jsxs","className","ref","children","_jsx","el","Link","to","Button","variant"],"sourceRoot":""}