{"version":3,"file":"static/js/943.8601a7ba.chunk.js","mappings":"gMAOAA,EAAAA,GAAKC,eAAeC,EAAAA,GAEpB,MAqKA,EArKqBC,KACnB,MAAMC,EAAa,CAAC,KAAM,6FAAmB,2EAAgB,iFAAiB,iHACvEC,EAAsBC,IAA2BC,EAAAA,EAAAA,UAAS,IAC1DC,EAAaC,IAAkBF,EAAAA,EAAAA,WAAS,IACxCG,EAAUC,IAAeJ,EAAAA,EAAAA,WAAS,GAEnCK,GAAaC,EAAAA,EAAAA,QAAO,MACpBC,GAAYD,EAAAA,EAAAA,QAAO,MACnBE,GAAWF,EAAAA,EAAAA,QAAO,IAClBG,GAAYH,EAAAA,EAAAA,QAAO,MACnBI,GAAgBJ,EAAAA,EAAAA,QAAO,IAyG7B,OAvGAK,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAcA,KAClBR,EAAYS,OAAOC,YAAc,IAAI,EAMvC,OAHAF,IACAC,OAAOE,iBAAiB,SAAUH,GAE3B,IAAMC,OAAOG,oBAAoB,SAAUJ,EAAY,GAC7D,KAEHD,EAAAA,EAAAA,YAAU,KACR,GAAIR,EAAU,OAEd,MAAMc,EAAWC,aAAY,KAC3BhB,GAAe,GACfiB,YAAW,KACTpB,GAAyBqB,IAAeA,EAAY,GAAKvB,EAAWwB,SACpEnB,GAAe,EAAM,GACpB,IAAI,GACN,KAEH,MAAO,IAAMoB,cAAcL,EAAS,GACnC,CAACpB,EAAWwB,OAAQlB,KAEvBQ,EAAAA,EAAAA,YAAU,MACJR,GAAaE,EAAWkB,UAE5B5B,EAAAA,EAAc6B,SAASC,SAAQC,GAAWA,EAAQC,SAE9CpB,EAAUgB,SACZ9B,EAAAA,GAAKmC,OAAOrB,EAAUgB,QACpB,CAAEM,EAAG,GAAIC,QAAS,GAClB,CACED,EAAG,EACHC,QAAS,EACTC,SAAU,GACVC,cAAe,CACbN,QAASnB,EAAUgB,QACnBU,MAAO,UACPC,cAAe,yBAMnB1B,EAASe,QAAQF,OAAS,GAAKb,EAASe,QAAQ,IAClD9B,EAAAA,GAAKmC,OAAOpB,EAASe,QACnB,CAAEM,EAAG,GAAIC,QAAS,GAClB,CACED,EAAG,EACHC,QAAS,EACTK,QAAS,GACTJ,SAAU,GACVC,cAAe,CACbN,QAASlB,EAASe,QAAQ,GAC1BU,MAAO,UACPC,cAAe,yBAMnBzB,EAAUc,SACZ9B,EAAAA,GAAKmC,OAAOnB,EAAUc,QACpB,CAAEM,EAAG,GAAIC,QAAS,GAClB,CACED,EAAG,EACHC,QAAS,EACTC,SAAU,GACVK,MAAO,GACPJ,cAAe,CACbN,QAASjB,EAAUc,QACnBU,MAAO,UACPC,cAAe,yBAIvB,GACC,CAAC/B,KAEJQ,EAAAA,EAAAA,YAAU,KACJR,GAAYE,EAAWkB,UACzB5B,EAAAA,EAAc6B,SAASC,SAAQC,GAAWA,EAAQC,SAE9CpB,EAAUgB,SACZ9B,EAAAA,GAAK4C,IAAI9B,EAAUgB,QAAS,CAAEM,EAAG,EAAGC,QAAS,IAG3CtB,EAASe,QAAQF,OAAS,GAC5B5B,EAAAA,GAAK4C,IAAI7B,EAASe,QAAS,CAAEM,EAAG,EAAGC,QAAS,IAG1CrB,EAAUc,SACZ9B,EAAAA,GAAK4C,IAAI5B,EAAUc,QAAS,CAAEM,EAAG,EAAGC,QAAS,IAG3CpB,EAAca,QAAQF,OAAS,GACjC5B,EAAAA,GAAK4C,IAAI3B,EAAca,QAAS,CAAEO,QAAS,IAE/C,GACC,CAAC3B,KAGFmC,EAAAA,EAAAA,MAAA,WAASC,UAAU,gBAAgBC,IAAKnC,EAAWoC,SAAA,EACjDH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BE,SAAA,EACxCC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yDAAyDC,IAAKG,GAAMjC,EAAca,QAAQ,GAAKoB,KAC9GD,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yDAAyDC,IAAKG,GAAMjC,EAAca,QAAQ,GAAKoB,KAC9GD,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yDAAyDC,IAAKG,GAAMjC,EAAca,QAAQ,GAAKoB,QAGhHL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAwBC,IAAKjC,EAAUkC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,QAAMH,UAAU,0BAAyBE,SAAC,6DAC1CH,EAAAA,EAAAA,MAAA,MAAIC,UAAU,uBAAsBE,SAAA,CAAC,oDACzB,KACVC,EAAAA,EAAAA,KAAA,QAAMH,UAAW,oCAAmCpC,GAAYF,EAAc,uCAAyC,IAAKwC,SACzHtC,EAAW,KAAON,EAAWC,KACxB,IAAI,oEAGd4C,EAAAA,EAAAA,KAAA,QAAMH,UAAU,+BAA8BE,SAAC,+DAGjDH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBE,SAAA,EAClCH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAsBC,IAAKG,GAAMnC,EAASe,QAAQ,GAAKoB,EAAGF,SAAA,EACvEC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,wBAAuBE,SAAC,UACvCC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,uBAAsBE,SAAC,kFAExCH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAsBC,IAAKG,GAAMnC,EAASe,QAAQ,GAAKoB,EAAGF,SAAA,EACvEC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,wBAAuBE,SAAC,SACvCC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,uBAAsBE,SAAC,+DAExCH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAsBC,IAAKG,GAAMnC,EAASe,QAAQ,GAAKoB,EAAGF,SAAA,EACvEC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,wBAAuBE,SAAC,0BACvCC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,uBAAsBE,SAAC,2EAExCH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAsBC,IAAKG,GAAMnC,EAASe,QAAQ,GAAKoB,EAAGF,SAAA,EACvEC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,wBAAuBE,SAAC,SACvCC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,uBAAsBE,SAAC,gGAI1CC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,kCAAkCC,IAAK/B,EAAUgC,UAC9DC,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,GAAG,SAASN,UAAU,sBAAqBE,UAC/CC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CAACC,QAAQ,QAAQR,UAAU,wBAAuBE,SAAC,8GAKtD,C","sources":["pages/Home/Components/StatsSection/StatsSection.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './StatsSection.scss';\nimport { Link } from 'react-router-dom';\nimport Button from '../../../../components/ui/Button/Button';\nimport gsap from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\n\ngsap.registerPlugin(ScrollTrigger);\n\nconst StatsSection = () => {\n  const industries = ['IT', 'ОБРАЗОВАТЕЛЬНОЙ', 'МЕХАНИЧЕСКОЙ', 'АВТОМОБИЛЬНОЙ', 'ЭЛЕКТРОТЕХНИЧЕСКОЙ'];\n  const [currentIndustryIndex, setCurrentIndustryIndex] = useState(0);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  const sectionRef = useRef(null);\n  const headerRef = useRef(null);\n  const itemsRef = useRef([]);\n  const buttonRef = useRef(null);\n  const bgElementsRef = useRef([]);\n\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n\n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n\n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n\n  useEffect(() => {\n    if (isMobile) return;\n\n    const interval = setInterval(() => {\n      setIsAnimating(true);\n      setTimeout(() => {\n        setCurrentIndustryIndex((prevIndex) => (prevIndex + 1) % industries.length);\n        setIsAnimating(false);\n      }, 300);\n    }, 2000);\n\n    return () => clearInterval(interval);\n  }, [industries.length, isMobile]);\n\n  useEffect(() => {\n    if (isMobile || !sectionRef.current) return;\n\n    ScrollTrigger.getAll().forEach(trigger => trigger.kill());\n\n    if (headerRef.current) {\n      gsap.fromTo(headerRef.current,\n        { y: 30, opacity: 0 },\n        {\n          y: 0,\n          opacity: 1,\n          duration: 0.4,\n          scrollTrigger: {\n            trigger: headerRef.current,\n            start: \"top 85%\",\n            toggleActions: \"play none none none\"\n          }\n        }\n      );\n    }\n\n    if (itemsRef.current.length > 0 && itemsRef.current[0]) {\n      gsap.fromTo(itemsRef.current,\n        { y: 20, opacity: 0 },\n        {\n          y: 0,\n          opacity: 1,\n          stagger: 0.1,\n          duration: 0.3,\n          scrollTrigger: {\n            trigger: itemsRef.current[0],\n            start: \"top 85%\",\n            toggleActions: \"play none none none\"\n          }\n        }\n      );\n    }\n\n    if (buttonRef.current) {\n      gsap.fromTo(buttonRef.current,\n        { y: 15, opacity: 0 },\n        {\n          y: 0,\n          opacity: 1,\n          duration: 0.3,\n          delay: 0.4,\n          scrollTrigger: {\n            trigger: buttonRef.current,\n            start: \"top 90%\",\n            toggleActions: \"play none none none\"\n          }\n        }\n      );\n    }\n  }, [isMobile]);\n\n  useEffect(() => {\n    if (isMobile && sectionRef.current) {\n      ScrollTrigger.getAll().forEach(trigger => trigger.kill());\n      \n      if (headerRef.current) {\n        gsap.set(headerRef.current, { y: 0, opacity: 1 });\n      }\n      \n      if (itemsRef.current.length > 0) {\n        gsap.set(itemsRef.current, { y: 0, opacity: 1 });\n      }\n      \n      if (buttonRef.current) {\n        gsap.set(buttonRef.current, { y: 0, opacity: 1 });\n      }\n      \n      if (bgElementsRef.current.length > 0) {\n        gsap.set(bgElementsRef.current, { opacity: 1 });\n      }\n    }\n  }, [isMobile]);\n\n  return (\n    <section className=\"stats-section\" ref={sectionRef}>\n      <div className=\"stats-section__background\">\n        <div className=\"stats-section__bg-element stats-section__bg-element--1\" ref={el => bgElementsRef.current[0] = el}></div>\n        <div className=\"stats-section__bg-element stats-section__bg-element--2\" ref={el => bgElementsRef.current[1] = el}></div>\n        <div className=\"stats-section__bg-element stats-section__bg-element--3\" ref={el => bgElementsRef.current[2] = el}></div>\n      </div>\n\n      <div className=\"stats-section__header\" ref={headerRef}>\n        <span className=\"stats-section__subtitle\">О КОЛЛЕДЖЕ</span>\n        <h2 className=\"stats-section__title\">\n          ЛУЧШЕЕ ОТ{' '}\n          <span className={`stats-section__title-highlight ${!isMobile && isAnimating ? 'stats-section__title-highlight--fade' : ''}`}>\n            {isMobile ? 'IT' : industries[currentIndustryIndex]}\n          </span>{' '}\n          ИНДУСТРИИ —\n        </h2>\n        <span className=\"stats-section__title--accent\">СТУДЕНТАМ</span>\n      </div>\n\n      <div className=\"stats-section__grid\">\n        <div className=\"stats-section__item\" ref={el => itemsRef.current[1] = el}>\n          <div className=\"stats-section__number\">1929</div>\n          <div className=\"stats-section__label\">год основания</div>\n        </div>\n        <div className=\"stats-section__item\" ref={el => itemsRef.current[2] = el}>\n          <div className=\"stats-section__number\">15+</div>\n          <div className=\"stats-section__label\">партнёров</div>\n        </div>\n        <div className=\"stats-section__item\" ref={el => itemsRef.current[0] = el}>\n          <div className=\"stats-section__number\">1млн+</div>\n          <div className=\"stats-section__label\">выпускников</div>\n        </div>\n        <div className=\"stats-section__item\" ref={el => itemsRef.current[3] = el}>\n          <div className=\"stats-section__number\">10+</div>\n          <div className=\"stats-section__label\">специальностей</div>\n        </div>\n      </div>\n\n      <div className=\"stats-section__button-container\" ref={buttonRef}>\n        <Link to=\"/about\" className=\"stats-section__link\">\n          <Button variant=\"green\" className=\"stats-section__button\">\n            УЗНАТЬ БОЛЬШЕ О НАС\n          </Button>\n        </Link>\n      </div>\n    </section>\n  );\n};\n\nexport default StatsSection;"],"names":["gsap","registerPlugin","ScrollTrigger","StatsSection","industries","currentIndustryIndex","setCurrentIndustryIndex","useState","isAnimating","setIsAnimating","isMobile","setIsMobile","sectionRef","useRef","headerRef","itemsRef","buttonRef","bgElementsRef","useEffect","checkMobile","window","innerWidth","addEventListener","removeEventListener","interval","setInterval","setTimeout","prevIndex","length","clearInterval","current","getAll","forEach","trigger","kill","fromTo","y","opacity","duration","scrollTrigger","start","toggleActions","stagger","delay","set","_jsxs","className","ref","children","_jsx","el","Link","to","Button","variant"],"sourceRoot":""}